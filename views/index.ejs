<!DOCTYPE html>
<html ng-app="chatroom">
  <head>
    <title><%= title %></title>
    <!-- Latest compiled and minified CSS -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
    <!--<link href="/public/stylesheets/mystyles.css" rel="stylesheet" type="text/css">-->
    <link href="http://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css">
    <link href="http://fonts.googleapis.com/css?family=Open+Sans:300,400italic,700italic,400,700" rel="stylesheet" type="text/css">
    <link rel='stylesheet' href='/stylesheets/startbootstrap.css' />
    <link rel='stylesheet' href='/stylesheets/mystyles.css' />

  </head>
  <body>

  <script>
    window.fbAsyncInit = function() {
      FB.init({
        appId      : '1261365763874341',
        xfbml      : true,
        version    : 'v2.4'
      });
    };

    (function(d, s, id){
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) {return;}
      js = d.createElement(s); js.id = id;
      js.src = "//connect.facebook.net/en_US/sdk.js";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
  </script>

  <script>
    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
      console.log('statusChangeCallback');
      console.log(response);
      // The response object is returned with a status field that lets the
      // app know the current login status of the person.
      // Full docs on the response object can be found in the documentation
      // for FB.getLoginStatus().
      if (response.status === 'connected') {
        // Logged into your app and Facebook.
        testAPI();
      } else if (response.status === 'not_authorized') {
        // The person is logged into Facebook, but not your app.
        document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
      } else {
        // The person is not logged into Facebook, so we're not sure if
        // they are logged into this app or not.
        document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
      }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
      FB.getLoginStatus(function(response) {
        statusChangeCallback(response);
      });
    }

    window.fbAsyncInit = function() {
      FB.init({
        appId      : '1261365763874341',
        cookie     : true,  // enable cookies to allow the server to access
                            // the session
        xfbml      : true,  // parse social plugins on this page
        version    : 'v2.2' // use version 2.2
      });

      // Now that we've initialized the JavaScript SDK, we call
      // FB.getLoginStatus().  This function gets the state of the
      // person visiting this page and can return one of three states to
      // the callback you provide.  They can be:
      //
      // 1. Logged into your app ('connected')
      // 2. Logged into Facebook, but not your app ('not_authorized')
      // 3. Not logged into Facebook and can't tell if they are logged into
      //    your app or not.
      //
      // These three cases are handled in the callback function.

      FB.getLoginStatus(function(response) {
        statusChangeCallback(response);
      });

    };

    // Load the SDK asynchronously
    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = "//connect.facebook.net/en_US/sdk.js";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    // Here we run a very simple test of the Graph API after login is
    // successful.  See statusChangeCallback() for when this call is made.
    function testAPI() {
      console.log('Welcome!  Fetching your information.... ');
      FB.api('/me', function(response) {
        console.log('Successful login for: ' + response.name);
        document.getElementById('status').innerHTML =
                'Thanks for logging in, ' + response.name + '!';
      });
    }
  </script>

  <!--
    Below we include the Login Button social plugin. This button uses
    the JavaScript SDK to present a graphical Login button that triggers
    the FB.login() function when clicked.
  -->


  <nav class=".navbar-fixed-top  navbar-inverse">
      <div class="container">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Chat.io</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <ul class="nav navbar-nav">
            <li><a href="#">Rooms </a></li>
            <li><a href="#">Dashboards</a></li>
            <li class="dropdown">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Topics<span class="caret"></span></a>
              <ul class="dropdown-menu">
                <li><a href="#">Action</a></li>
                <li><a href="#">Another action</a></li>
              </ul>
            </li>
          </ul>
          <ul class="nav navbar-nav navbar-right">
            <li><a href="#"><span class="glyphicon glyphicon-user"></span> Login</a></li>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div><!-- /.container-fluid -->
    </nav>
    <div class="container">
      <div class="panel" ng-controller="roomCtrl" ng-init="init()">
        <div class="panel-heading">
          <h2>List of Available Users:{{existingUsers}}</h2>
          <br>
          <h4 ng-show="!existingUsers.length">Noone in house as of now....</h4>
          <ul class="nav nav-pills">
            <li ng-repeat="user in existingUsers"><a class="btn btn-default" href="#">{{user.username}}</a></li>
            <!--<li><a class="btn btn-default" href="#">User B</a></li>-->
            <!--<li><a class="btn btn-default" href="#">User C</a></li>-->
          </ul>
        </div>
      </div>
      <br>
      <!--<div>-->
        <!--<h5 ng-show=""><strong>Welcome {{}}</strong></h5>-->
      <!--</div>-->
      <br>
      <form ng-hide="" ng-controller="userInfoCtrl" id="form_main" action="">
            <br>
            <br>
            <h2>Personal information:</h2>
            First name:<br>
            <input ng-model="newcomer" type="text" name="username" class="username" placeholder="Name">
            <input class="btn btn-default pull-right" id="form1" type="submit" ng-click="newUser(newcomer)" value="Submit">
      </form>
      <br>
      <br>
      <ul class="messenger" style="list-style: none;padding: 0px" id="messages">
      </ul>


      <div class="container panel fixBottom">
        <form id="form2"  action="">
          <h3>Write your message</h3>
          <input type="text" class="m" name="msg" autocomplete="off" >
          <input class="btn btn-default pull-right" type="submit" value="Submit">
        </form>
      </div>
    </div>

    <script src="https://cdn.socket.io/socket.io-1.3.5.js"></script>
    <script src="/javascripts/jquery.min.js"></script>
    <script src="/javascripts/bootstrap.min.js"></script>
    <script src="/javascripts/angular.min.js"></script>
    <script src="/javascripts/final.js"></script>
    <script src="/javascripts/controllers.js"></script>
    <!--<script src="/javascripts/originalChat.js"></script>-->


  </body>
</html>
